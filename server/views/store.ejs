<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Store</title>
  <link rel="stylesheet" href="/styles.css" />
</head>
<body>
  <%- include('partials/header') %>
  <div class="container">
    <h1>Store</h1>
    <div class="controls">
      <label><input type="checkbox" id="lowOnly" /> Show only low stock</label>
      <button id="refreshBtn">Refresh</button>
    </div>

    <div id="products" class="grid"></div>
  </div>

  <%- include('partials/footer') %>

  <script>
    document.addEventListener('DOMContentLoaded', ()=>{
      const cartBtn = document.getElementById('cartBtn');
      if (cartBtn) cartBtn.addEventListener('click', (e)=>{ e.preventDefault(); window.location.href='/home/cart'; });
    });

    const productsEl = document.getElementById('products');
    const lowOnly = document.getElementById('lowOnly');
    const refreshBtn = document.getElementById('refreshBtn');

    async function fetchProducts(){
      productsEl.innerHTML = 'Loading...';
      try{
        const low = lowOnly.checked ? '&low=1' : '';
        const res = await fetch('/home/store?format=json' + low);
        if (!res.ok) throw new Error('failed');
        const data = await res.json();
        render(data);
      }catch(e){
        productsEl.innerHTML = '<div>Error loading products</div>'
      }
    }

    function render(data){
      const onlyLow = lowOnly.checked;
      const list = onlyLow ? data.filter(p => (p.stock_quantity || 0) <= (p.low_stock_threshold || 0)) : data;
      if (!list.length){ productsEl.innerHTML = '<div>No products</div>'; return }
      productsEl.innerHTML = list.map(p => `
        <div class="card ${((p.stock_quantity||0) <= (p.low_stock_threshold||0)) ? 'low' : ''}">
          <div style="display:flex;justify-content:space-between">
            <strong>${escapeHtml(p.name)}</strong>
            <small>â‚¹${p.price||0}</small>
          </div>
          <div style="margin-top:6px">${escapeHtml(p.description||'')}</div>
          <div style="margin-top:8px;color:#666">Stock: ${p.stock_quantity||0} | Low threshold: ${p.low_stock_threshold||0}</div>
          <div style="margin-top:8px;color:#666">Warehouse: ${p.warehouse && p.warehouse.location ? escapeHtml(p.warehouse.location) : 'N/A'}</div>
          <div style="margin-top:6px;color:#666">Owner: ${p.warehouse && p.warehouse.owner ? escapeHtml(p.warehouse.owner.name || '') : ''}</div>
          <div style="margin-top:8px;display:flex;gap:8px;align-items:center">
            <button data-product="${p._id}" class="decQty">-</button>
            <input data-product="${p._id}" class="qtyInput" type="number" min="1" value="1" style="width:50px;text-align:center" data-available="${p.stock_quantity||0}" />
            <button data-product="${p._id}" class="incQty">+</button>
            <button data-product="${p._id}" class="addToCart">Add to cart</button>
            <div class="stockHint" data-prod="${p._id}" style="color:#666;margin-left:8px">Available: ${p.stock_quantity||0}</div>
          </div>
        </div>
      `).join('');

      // wire controls
      document.querySelectorAll('.incQty').forEach(btn=>{
        btn.addEventListener('click', (e)=>{
          const id = btn.getAttribute('data-product');
          const input = document.querySelector(`input.qtyInput[data-product="${id}"]`);
          const avail = parseInt(input.dataset.available || '0', 10) || 0;
          let val = parseInt(input.value || '1', 10);
          if (val < avail) { input.value = val + 1; }
          else { alert('Cannot add more than available stock'); }
        });
      });

      document.querySelectorAll('.decQty').forEach(btn=>{
        btn.addEventListener('click', (e)=>{
          const id = btn.getAttribute('data-product');
          const input = document.querySelector(`input.qtyInput[data-product="${id}"]`);
          let val = parseInt(input.value || '1', 10);
          if (val > 1) input.value = val - 1;
        });
      });

      document.querySelectorAll('.addToCart').forEach(btn=>{
        btn.addEventListener('click', async (e)=>{
          const id = btn.getAttribute('data-product');
          const input = document.querySelector(`input.qtyInput[data-product="${id}"]`);
          const q = parseInt(input.value||'1',10);
          // check stock before sending
          const stock = parseInt(input.dataset.available || '0', 10) || 0;
          if (q > stock) { alert('Requested quantity exceeds available stock'); return; }
          try{
            const res = await fetch('/home/cart/add', { method: 'POST', headers: {'Content-Type':'application/json', 'Accept':'application/json'}, body: JSON.stringify({ productId: id, qty: q }) });
            if (!res.ok) {
              // try to parse JSON error body; fall back to text
              try {
                const err = await res.json();
                if (err && typeof err.available !== 'undefined') {
                  alert(`Exceeded current stock, current stock value: ${err.available}`);
                } else {
                  alert(err && (err.error || err.message) ? (err.error || err.message) : 'Failed to add to cart');
                }
              } catch (parseErr) {
                const txt = await res.text().catch(()=>null);
                alert(txt || 'Failed to add to cart');
              }
              return;
            }
            alert('Added to cart');
          }catch(e){ alert('Failed to add to cart'); }
        });
      });
    }


    function escapeHtml(str){
      return String(str).replace(/[&<>"]/g, s => ({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;'}[s]));
    }

    refreshBtn.addEventListener('click', fetchProducts);
    lowOnly.addEventListener('change', fetchProducts);

    // initial load
    fetchProducts();
  </script>
</body>
</html>